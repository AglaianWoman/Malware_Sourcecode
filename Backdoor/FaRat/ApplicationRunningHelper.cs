using System;
using System.Diagnostics;
using System.Runtime.InteropServices;

namespace FARATCLIENT
{
	// Token: 0x02000008 RID: 8
	public static class ApplicationRunningHelper
	{
		// Token: 0x06000033 RID: 51 RVA: 0x00007670 File Offset: 0x00005870
		public static bool AlreadyRunning()
		{
			Process currentProcess = Process.GetCurrentProcess();
			Process[] processesByName = Process.GetProcessesByName(currentProcess.ProcessName);
			bool flag = processesByName.Length > 1;
			bool result;
			if (flag)
			{
				for (int i = 0; i < processesByName.Length; i++)
				{
					bool flag2 = processesByName[i].Id != currentProcess.Id;
					if (flag2)
					{
						IntPtr mainWindowHandle = processesByName[i].MainWindowHandle;
						bool flag3 = ApplicationRunningHelper.IsIconic(mainWindowHandle);
						if (flag3)
						{
							ApplicationRunningHelper.ShowWindowAsync(mainWindowHandle, 9);
						}
						ApplicationRunningHelper.SetForegroundWindow(mainWindowHandle);
						break;
					}
				}
				result = true;
			}
			else
			{
				result = false;
			}
			return result;
		}

		// Token: 0x06000032 RID: 50
		[DllImport("user32.dll")]
		private static extern bool IsIconic(IntPtr hWnd);

		// Token: 0x06000030 RID: 48
		[DllImport("user32.dll")]
		private static extern bool SetForegroundWindow(IntPtr hWnd);

		// Token: 0x06000031 RID: 49
		[DllImport("user32.dll")]
		private static extern bool ShowWindowAsync(IntPtr hWnd, int nCmdShow);
	}
}
